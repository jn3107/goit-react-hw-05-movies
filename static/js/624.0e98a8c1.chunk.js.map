{"version":3,"file":"static/js/624.0e98a8c1.chunk.js","mappings":"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","sources":["components/trendingList/TrendingList.styled.js","components/trendingList/TrendingList.jsx","helppers/Fetch.js","pages/home/Home.styled.js","components/searchForm/SearchForm.styled.js","components/searchForm/SearchForm.jsx","pages/movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  text-align: center;\n\n  }\n`;\n\nexport const List = styled.ul`\n  list-style-type: none;\n  display: grid;\n  max-width: calc(100vw - 65px);\n  grid-template-columns: repeat(auto-fill, minmax(230px, 1fr));\n  grid-gap: 15px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n  @media screen and (min-width: 768px) {\n    max-width: calc(100vw - 48px);\n    grid-template-columns: repeat(auto-fill, minmax(230px, 1fr));\n    grid-gap: 40px;\n  }\n`;\n\nexport const Item = styled.li`\n  box-shadow: 5px 5px 9px -1px rgba(210, 105, 30, 1);\n  -webkit-box-shadow: 5px, 5px, 9px, -1px rgba(210, 105, 30, 1);\n  -moz-box-shadow: 5px, 5px, 9px, -1px rgba(210, 105, 30, 1);\n  border-radius: 15px;\n  border: 4px solid orange;\n  overflow: hidden;\n  background: black;\n`;\n\nexport const Photo = styled.img`\n  width: 100%;\n  object-fit: cover;\n  margin-bottom: 20px;\n`;\n\nexport const Text = styled.p`\n  text-align: center;\n  font-weight: 700;\n  font-size: 25px;\n  color: white;\n  margin-bottom: 10px;\n@media screen and (min-width: 768px) {\n   font-size: 24px;\n  }\n  }\n`;\nexport const TextScore = styled.p`\n  text-align: center;\n  font-size: 15px;\n  font-weight: 700;\n  color: white;\n  margin-bottom: 10px;\n  }\n`;\n\nexport const TextInfo = styled.p`\n  font-size: 15px;\n  font-weight: 700;\n  color: white;\n  text-align: center;\n`;\n","import React from 'react';\nimport {\n  StyledLink,\n  List,\n  Item,\n  Photo,\n  Text,\n  TextScore,\n} from './TrendingList.styled';\nimport { useLocation } from 'react-router-dom';\n\nconst TrendingList = ({ movies }) => {\n  const location = useLocation();\n  const defaultMovieImg =\n    'https://netsh.pp.ua/2017/08/no-photo-placeholder-opencart';\n\n  return (\n    <div>\n      <List>\n        {movies.map(({ id, title, poster_path, vote_average }) => (\n          <Item key={id}>\n            <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n              <Photo\n                width=\"264px\"\n                height=\"384px\"\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                    : defaultMovieImg\n                }\n                alt={title}\n              />\n              <Text>{title}</Text>\n            </StyledLink>\n            <TextScore>User Scrore: {Math.round(vote_average * 10)}%</TextScore>\n          </Item>\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport { TrendingList };\n","import axios from 'axios';\n\nconst KEY = 'dc46b2bf0e575d3fd6c04fa612170e69';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingList = async () => {\n  try {\n    const { data } = await axios.get('trending/movie/day', {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n      },\n    });\n\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching trends:', error);\n    throw error;\n  }\n};\n\nexport const fetchSearchMovies = async query => {\n  try {\n    const { data } = await axios.get('search/movie', {\n      params: {\n        api_key: KEY,\n        query,\n        language: 'en-US',\n      },\n    });\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching movies:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieInform = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n      },\n    });\n    return data;\n  } catch (error) {\n    console.error('Error fetching movie information:', error);\n    throw error;\n  }\n};\n\nexport const fetchActors = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n      },\n    });\n    return data.cast;\n  } catch (error) {\n    console.error('Error fetching cast:', error);\n    throw error;\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n      },\n    });\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching reviews:', error);\n    throw error;\n  }\n};\n","import styled from 'styled-components';\n\nexport const HomeDiv = styled.div`\n  background-color: black;\n  color: #e6e6e6;\n  padding: 50px 100px;\n`;\nexport const HomeTitle = styled.h1`\n  color: indianRed;\n  font-size: 75px;\n  font-weight: 700;\n  margin-bottom: 20px;\n`;\n\nexport const TextInfo = styled.p`\n  font-size: 15px;\n  font-weight: 700;\n  color: white;\n  text-align: center;\n`;\n","import styled from 'styled-components';\nimport { IoSearchOutline } from 'react-icons/io5';\n\nexport const SearchDiv = styled.div`\n  top: 0;\n  left: 0;\n  position: sticky;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 75px;\n  padding: 20px;\n  z-index: 10;\n  margin: 0 auto;\n  background-color: black;\n`;\nexport const StyledSearchIcon = styled(IoSearchOutline)`\n  color: orange;\n  font-size: 35px;\n`;\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  background: white;\n  width: 100%;\n  margin-bottom: 40px;\n  max-width: 600px;\n  overflow: hidden;\n  border-radius: 15px;\n  border: 4px solid orange;\n   box-shadow: 5px 5px 9px -1px rgba(210, 105, 30, 1);\n  -webkit-box-shadow: 5px, 5px, 9px, -1px rgba(210, 105, 30, 1);\n  -moz-box-shadow: 5px, 5px, 9px, -1px rgba(210, 105, 30, 1); rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n  button {\n    display: inline-block;\n    width: 55px;\n    height: 55px;\n    border: 0;\n    background-size: 40%;\n    background: oliveDrab;\n    background-repeat: no-repeat;\n    background-position: center;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n    padding: 3px;\n  }\n\n  button:hover {\n    opacity: 1;\n  }\n\n  span {\n    font-size: 30px;\n  }\n\n  button-label {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    clip-path: inset(50%);\n    border: 0;\n  }\n\n  input {\n    display: inline-block;\n    width: 100%;\n    font: inherit;\n    font-size: 25px;\n    border: none;\n    outline: none;\n    padding-left: 20px;\n    padding-right: 4px;\n    background: transparent;\n    color: black;\n  }\n\n  input::placeholder {\n    font: inherit;\n    font-size: 25px;\n    color: black;\n  }\n`;\n","import { SearchDiv, Form, StyledSearchIcon } from './SearchForm.styled';\n\nconst SearchForm = ({ handleSubmit }) => {\n  return (\n    <div>\n      <SearchDiv>\n        <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            placeholder=\"Enter movie name...\"\n            name=\"searchQuery\"\n            autoFocus\n          />\n          <button type=\"submit\">\n            <StyledSearchIcon />\n          </button>\n        </Form>\n      </SearchDiv>\n    </div>\n  );\n};\n\nexport { SearchForm };\n","import { TrendingList } from 'components/trendingList/TrendingList';\nimport { fetchSearchMovies } from 'helppers/Fetch';\nimport React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { HomeDiv, TextInfo } from '../home/Home.styled';\nimport { Loader } from 'components/loader/Loader';\nimport { SearchForm } from 'components/searchForm/SearchForm';\n\nfunction Movies() {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [noName, setNoName] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('searchQuery');\n\n  useEffect(() => {\n    const fetchMoviesSearch = () => {\n      setLoading(true);\n      fetchSearchMovies(searchQuery)\n        .then(queryMovieName => {\n          setMovies(queryMovieName);\n          setNoName(queryMovieName.length === 0);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n    if (searchQuery) {\n      fetchMoviesSearch();\n    } else {\n      setMovies([]);\n      setNoName(false);\n      setLoading(false);\n    }\n  }, [searchQuery]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams({ searchQuery: form.elements.searchQuery.value });\n    form.reset();\n  };\n\n  return (\n    <HomeDiv>\n      <SearchForm handleSubmit={handleSubmit} />\n      {loading && <Loader />}\n      {noName && searchQuery && (\n        <TextInfo>\n          There is no movies with this request. Please, try again\n        </TextInfo>\n      )}\n      <TrendingList movies={movies} />\n    </HomeDiv>\n  );\n}\n\nexport default Movies;\n"],"names":["StyledLink","styled","Link","_templateObject","_taggedTemplateLiteral","List","ul","_templateObject2","Item","li","_templateObject3","Photo","img","_templateObject4","Text","p","_templateObject5","TextScore","_templateObject6","_templateObject7","TrendingList","_ref","movies","location","useLocation","_jsx","children","map","_ref2","id","title","poster_path","vote_average","_jsxs","to","concat","state","from","width","height","src","alt","Math","round","KEY","axios","defaults","baseURL","fetchTrendingList","async","data","get","params","api_key","language","results","error","console","fetchSearchMovies","query","fetchMovieInform","movieId","fetchActors","cast","fetchReviews","HomeDiv","div","HomeTitle","h1","TextInfo","SearchDiv","StyledSearchIcon","IoSearchOutline","Form","form","SearchForm","handleSubmit","autoComplete","onSubmit","type","placeholder","name","autoFocus","setMovies","useState","loading","setLoading","noName","setNoName","searchParams","setSearchParams","useSearchParams","searchQuery","useEffect","then","queryMovieName","length","catch","log","finally","e","preventDefault","currentTarget","elements","value","reset","Loader"],"sourceRoot":""}