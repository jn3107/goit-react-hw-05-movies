{"version":3,"file":"static/js/996.5e855e6b.chunk.js","mappings":"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","sources":["helppers/Fetch.js","pages/moviesDetails/MoviesDetails.styled.js","components/aditional/Aditional.styled.js","components/aditional/Aditional.jsx","pages/moviesDetails/MoviesDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = 'dc46b2bf0e575d3fd6c04fa612170e69';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingList = async () => {\n  try {\n    const { data } = await axios.get('trending/movie/day', {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n      },\n    });\n\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching trends:', error);\n    throw error;\n  }\n};\n\nexport const fetchSearchMovies = async query => {\n  try {\n    const { data } = await axios.get('search/movie', {\n      params: {\n        api_key: KEY,\n        query,\n        language: 'en-US',\n      },\n    });\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching movies:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieInform = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n      },\n    });\n    return data;\n  } catch (error) {\n    console.error('Error fetching movie information:', error);\n    throw error;\n  }\n};\n\nexport const fetchActors = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n      },\n    });\n    return data.cast;\n  } catch (error) {\n    console.error('Error fetching cast:', error);\n    throw error;\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n      },\n    });\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching reviews:', error);\n    throw error;\n  }\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  background: black;\n  color: white;\n  font-weight: 700;\n  font-size: 25px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n\nexport const ListGenres = styled.ul`\n  list-style-type: none;\n  display: flex;\n  gap: 20px;\n\n  @media screen and (min-width: 768px) {\n    justify-content: flex-start;\n  }\n`;\nexport const List = styled.ul`\n  list-style-type: none;\n  padding-left: 0;\n\n  @media screen and (min-width: 768px) {\n    justify-content: flex-start;\n  }\n`;\nexport const ImgWrp = styled.div`\n  display: flex;\n  justify-content: center;\n  background: black;\n  box-shadow: 5px 5px 9px -1px rgba(210, 105, 30, 1);\n  -webkit-box-shadow: 5px, 5px, 9px, -1px rgba(210, 105, 30, 1);\n  -moz-box-shadow: 5px, 5px, 9px, -1px rgba(210, 105, 30, 1);\n  border-radius: 15px;\n  border: 4px solid orange;\n`;\n\nexport const InfoWrp = styled.div`\n  display: flex;\n  gap: 10px;\n  padding: 20px;\n  flex-direction: column;\n  p {\n    text-align: justify;\n  }\n`;\n\nexport const Img = styled.img`\n  padding: 15px;\n  width: 250px;\n  @media screen and (min-width: 768px) {\n    min-width: 200px;\n  }\n`;\n\nexport const LinkBtn = styled(Link)`\n  display: block;\n  background-color: oliveDrab;\n  width: 120px;\n  height: 40px;\n  text-align: center;\n  border-radius: 15px;\n  text-decoration: none;\n  color: orange;\n  padding: 5px 35px 5px 35px;\n  font-size: 30px;\n  font-weight: 700;\n  margin-bottom: 20px;\n  &:hover {\n    border: 4px solid #006400;\n    color: olive;\n    background-color: orange;\n    scale: 1.15;\n    box-shadow: 5px 5px 9px -1px rgba(154, 205, 50, 1);\n    -webkit-box-shadow: 5px, 5px, 9px, -1px rgba(154, 205, 50, 1);\n    -moz-box-shadow: 5px, 5px, 9px, -1px rgba(154, 205, 50, 1);\n  }\n`;\nexport const BackDiv = styled.div`\n  background: black;\n  padding-top: 15px;\n  padding-left: 15px;\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style-type: none;\n  padding-left: 0;\n\n  @media screen and (min-width: 768px) {\n    justify-content: flex-start;\n  }\n`;\n\nexport const AdditionalWrp = styled.div`\n  background: black;\n  padding: 10px 15px;\n  h3 {\n    margin-bottom: 25px;\n    font-weight: 900;\n    font-size: 35px;\n    color: indianRed;\n  }\n`;\n\nexport const LineDiv = styled.div``;\n\nexport const LinkInfo = styled(Link)`\n  display: block;\n  background-color: oliveDrab;\n  width: 280px;\n  height: 40px;\n  text-align: center;\n  border-radius: 15px;\n  text-decoration: none;\n  color: orange;\n  padding: 5px 35px 5px 35px;\n  font-size: 30px;\n  font-weight: 700;\n  margin-bottom: 20px;\n  &:hover {\n    border: 4px solid #006400;\n    color: olive;\n    background-color: orange;\n    scale: 1.15;\n    box-shadow: 5px 5px 9px -1px rgba(154, 205, 50, 1);\n    -webkit-box-shadow: 5px, 5px, 9px, -1px rgba(154, 205, 50, 1);\n    -moz-box-shadow: 5px, 5px, 9px, -1px rgba(154, 205, 50, 1);\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { List, AdditionalWrp, LinkInfo, LineDiv } from './Aditional.styled';\n\nconst AdditionalInfo = () => {\n  const location = useLocation();\n\n  return (\n    <div>\n      <AdditionalWrp>\n        <LineDiv>\n          <h3>Additional information</h3>\n          <List>\n            <li>\n              <LinkInfo to=\"cast\" state={{ from: location }}>\n                Cast\n              </LinkInfo>\n            </li>\n            <li>\n              <LinkInfo to=\"reviews\" state={{ from: location }}>\n                Reviews\n              </LinkInfo>\n            </li>\n          </List>\n        </LineDiv>\n      </AdditionalWrp>\n    </div>\n  );\n};\n\nexport { AdditionalInfo };\n","import { fetchMovieInform } from 'helppers/Fetch';\nimport React, { Suspense, useEffect, useRef, useState } from 'react';\nimport { FaArrowRotateLeft } from 'react-icons/fa6';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport {\n  MovieContainer,\n  InfoWrp,\n  ImgWrp,\n  Img,\n  ListGenres,\n  LinkBtn,\n  BackDiv,\n} from './MoviesDetails.styled';\nimport { Loader } from 'components/loader/Loader';\nimport { AdditionalInfo } from 'components/aditional/Aditional';\n\nconst MoviesDetails = () => {\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n  const { movieId } = useParams();\n  const backBtnLocation = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetchMovieDetails = () => {\n      setLoading(true);\n      fetchMovieInform(movieId)\n        .then(movieDetails => {\n          setMovieInfo(movieDetails);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n    fetchMovieDetails();\n  }, [movieId]);\n  if (!movieInfo) {\n    return null;\n  }\n  const {\n    title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n    poster_path,\n    original_title,\n  } = movieInfo || {};\n  const releaseDate = release_date.slice(0, 4);\n  const userScore = Math.round(vote_average * 10);\n  const defaultMovieImg =\n    'https://netsh.pp.ua/2017/08/no-photo-placeholder-opencart';\n\n  return (\n    <div>\n      <BackDiv>\n        <LinkBtn to={backBtnLocation.current}>\n          Go back\n          {/* <FaArrowRotateLeft /> */}\n        </LinkBtn>\n      </BackDiv>\n      {loading && <Loader />}\n      {movieInfo && (\n        <MovieContainer>\n          <ImgWrp>\n            <Img\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : defaultMovieImg\n              }\n              alt={original_title}\n            />\n          </ImgWrp>\n          <InfoWrp>\n            <h2>\n              {title}({releaseDate})\n            </h2>\n            <p>User score:{userScore}%</p>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n            <h3>Genres</h3>\n            <ListGenres>\n              {genres.map(({ name, id }) => (\n                <li key={id}>{name}</li>\n              ))}\n            </ListGenres>\n          </InfoWrp>\n        </MovieContainer>\n      )}\n      <AdditionalInfo />\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MoviesDetails;\n"],"names":["KEY","axios","defaults","baseURL","fetchTrendingList","async","data","get","params","api_key","language","results","error","console","fetchSearchMovies","query","fetchMovieInform","concat","movieId","fetchActors","cast","fetchReviews","MovieContainer","styled","div","_templateObject","_taggedTemplateLiteral","ListGenres","ul","_templateObject2","ImgWrp","_templateObject3","_templateObject4","InfoWrp","_templateObject5","Img","img","_templateObject6","LinkBtn","Link","_templateObject7","BackDiv","_templateObject8","List","AdditionalWrp","LineDiv","LinkInfo","AdditionalInfo","location","useLocation","_jsx","children","_jsxs","to","state","from","MoviesDetails","_location$state$from","_location$state","movieInfo","setMovieInfo","useState","loading","setLoading","useParams","backBtnLocation","useRef","useEffect","then","movieDetails","catch","log","finally","title","release_date","vote_average","overview","genres","poster_path","original_title","releaseDate","slice","userScore","Math","round","current","Loader","src","alt","map","_ref","name","id","Suspense","fallback","Outlet"],"sourceRoot":""}