{"version":3,"file":"static/js/436.3d951f7a.chunk.js","mappings":"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","sources":["components/trendingList/TrendingList.styled.js","components/trendingList/TrendingList.jsx","helppers/Fetch.js","pages/home/Home.jsx","pages/home/Home.styled.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  text-align: center;\n\n  }\n`;\n\nexport const List = styled.ul`\n  list-style-type: none;\n  display: grid;\n  max-width: calc(100vw - 65px);\n  grid-template-columns: repeat(auto-fill, minmax(230px, 1fr));\n  grid-gap: 15px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n  @media screen and (min-width: 768px) {\n    max-width: calc(100vw - 48px);\n    grid-template-columns: repeat(auto-fill, minmax(230px, 1fr));\n    grid-gap: 40px;\n  }\n`;\n\nexport const Item = styled.li`\n  box-shadow: 5px 5px 9px -1px rgba(210, 105, 30, 1);\n  -webkit-box-shadow: 5px, 5px, 9px, -1px rgba(210, 105, 30, 1);\n  -moz-box-shadow: 5px, 5px, 9px, -1px rgba(210, 105, 30, 1);\n  border-radius: 15px;\n  border: 4px solid orange;\n  overflow: hidden;\n  background: black;\n`;\n\nexport const Photo = styled.img`\n  width: 100%;\n  object-fit: cover;\n  margin-bottom: 20px;\n`;\n\nexport const Text = styled.p`\n  text-align: center;\n  font-weight: 700;\n  font-size: 25px;\n  color: white;\n  margin-bottom: 10px;\n@media screen and (min-width: 768px) {\n   font-size: 24px;\n  }\n  }\n`;\nexport const TextScore = styled.p`\n  text-align: center;\n  font-size: 15px;\n  font-weight: 700;\n  color: white;\n  margin-bottom: 10px;\n  }\n`;\n\nexport const TextInfo = styled.p`\n  font-size: 15px;\n  font-weight: 700;\n  color: white;\n  text-align: center;\n`;\n","import React from 'react';\nimport {\n  StyledLink,\n  List,\n  Item,\n  Photo,\n  Text,\n  TextScore,\n} from './TrendingList.styled';\nimport { useLocation } from 'react-router-dom';\n\nconst TrendingList = ({ movies }) => {\n  const location = useLocation();\n  const defaultMovieImg =\n    'https://netsh.pp.ua/2017/08/no-photo-placeholder-opencart';\n\n  return (\n    <div>\n      <List>\n        {movies.map(({ id, title, poster_path, vote_average }) => (\n          <Item key={id}>\n            <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n              <Photo\n                width=\"264px\"\n                height=\"384px\"\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                    : defaultMovieImg\n                }\n                alt={title}\n              />\n              <Text>{title}</Text>\n            </StyledLink>\n            <TextScore>User Scrore: {Math.round(vote_average * 10)}%</TextScore>\n          </Item>\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport { TrendingList };\n","import axios from 'axios';\n\nconst KEY = 'dc46b2bf0e575d3fd6c04fa612170e69';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingList = async () => {\n  try {\n    const { data } = await axios.get('trending/movie/day', {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n      },\n    });\n\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching trends:', error);\n    throw error;\n  }\n};\n\nexport const fetchSearchMovies = async query => {\n  try {\n    const { data } = await axios.get('search/movie', {\n      params: {\n        api_key: KEY,\n        query,\n        language: 'en-US',\n      },\n    });\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching movies:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieInform = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n      },\n    });\n    return data;\n  } catch (error) {\n    console.error('Error fetching movie information:', error);\n    throw error;\n  }\n};\n\nexport const fetchActors = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n      },\n    });\n    return data.cast;\n  } catch (error) {\n    console.error('Error fetching cast:', error);\n    throw error;\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n      },\n    });\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching reviews:', error);\n    throw error;\n  }\n};\n","import { TrendingList } from 'components/trendingList/TrendingList';\nimport { fetchTrendingList } from 'helppers/Fetch';\nimport React, { useEffect, useState } from 'react';\nimport { HomeDiv, HomeTitle } from './Home.styled';\nimport { Loader } from 'components/loader/Loader';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const fetchTrendingMovies = () => {\n      setLoading(true);\n      fetchTrendingList()\n        .then(trendingMovies => {\n          setMovies(trendingMovies);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <HomeDiv>\n      <HomeTitle>Trending today</HomeTitle>\n      <TrendingList movies={movies} />\n      {loading && <Loader />}\n    </HomeDiv>\n  );\n};\n\nexport default Home;\n","import styled from 'styled-components';\n\nexport const HomeDiv = styled.div`\n  background-color: black;\n  color: #e6e6e6;\n  padding: 50px 100px;\n`;\nexport const HomeTitle = styled.h1`\n  color: indianRed;\n  font-size: 75px;\n  font-weight: 700;\n  margin-bottom: 20px;\n`;\n\nexport const TextInfo = styled.p`\n  font-size: 15px;\n  font-weight: 700;\n  color: white;\n  text-align: center;\n`;\n"],"names":["StyledLink","styled","Link","_templateObject","_taggedTemplateLiteral","List","ul","_templateObject2","Item","li","_templateObject3","Photo","img","_templateObject4","Text","p","_templateObject5","TextScore","_templateObject6","_templateObject7","TrendingList","_ref","movies","location","useLocation","_jsx","children","map","_ref2","id","title","poster_path","vote_average","_jsxs","to","concat","state","from","width","height","src","alt","Math","round","KEY","axios","defaults","baseURL","fetchTrendingList","async","data","get","params","api_key","language","results","error","console","fetchSearchMovies","query","fetchMovieInform","movieId","fetchActors","cast","fetchReviews","Home","setMovies","useState","loading","setLoading","useEffect","then","trendingMovies","catch","log","finally","HomeDiv","HomeTitle","Loader","div","h1","TextInfo"],"sourceRoot":""}