{"version":3,"file":"static/js/756.3d0dffe9.chunk.js","mappings":"8MAKA,MA6CA,EA7CgBA,KACd,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KACjC,QAAEC,IAAYC,EAAAA,EAAAA,OACbC,EAASC,IAAcJ,EAAAA,EAAAA,WAAS,GAkBvC,OAjBAK,EAAAA,EAAAA,YAAU,KAEND,GAAW,IACXE,EAAAA,EAAAA,IAAaL,GACVM,MAAKC,IACJT,EAAWS,EAAO,IAEnBC,OAAMC,IACLC,QAAQC,IAAIF,EAAM,IAEnBG,SAAQ,KACPT,GAAW,EAAM,GAGJ,GAClB,CAACH,KAGFa,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,QAAS,OAAQC,UAAW,WAAYC,SAAA,CACnDf,IAAWgB,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KACjBjB,GAA8B,IAAnBL,EAAQuB,SACnBF,EAAAA,EAAAA,KAAA,KAAGJ,MAAO,CAAEO,MAAO,QAASC,SAAU,OAAQC,WAAY,OAAQN,SAAC,kCAIrEC,EAAAA,EAAAA,KAAA,MAAIJ,MAAO,CAAEU,cAAe,QAASP,SAClCpB,EAAQ4B,KAAIC,IAAA,IAAC,GAAEC,EAAE,OAAEC,EAAM,QAAEC,GAASH,EAAA,OACnCb,EAAAA,EAAAA,MAAA,MAAAI,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIJ,MAAO,CAAEgB,aAAc,OAAQC,UAAW,QAASd,SACpDW,KAEHV,EAAAA,EAAAA,KAAA,KAAGJ,MAAO,CAAEO,MAAO,QAASC,SAAU,OAAQC,WAAY,OAAQN,SAC/DY,MALIF,EAOJ,QAGL,C,mFC5CV,MAAMK,EAAM,mCACZC,EAAAA,EAAMC,SAASC,QAAU,gCAElB,MAAMC,EAAoBC,UAC/B,IACE,MAAM,KAAEC,SAAeL,EAAAA,EAAMM,IAAI,qBAAsB,CACrDC,OAAQ,CACNC,QAAST,EACTU,SAAU,WAId,OAAOJ,EAAKK,OACd,CAAE,MAAOlC,GAEP,MADAC,QAAQD,MAAM,yBAA0BA,GAClCA,CACR,GAGWmC,EAAoBP,UAC/B,IACE,MAAM,KAAEC,SAAeL,EAAAA,EAAMM,IAAI,eAAgB,CAC/CC,OAAQ,CACNC,QAAST,EACTa,QACAH,SAAU,WAGd,OAAOJ,EAAKK,OACd,CAAE,MAAOlC,GAEP,MADAC,QAAQD,MAAM,yBAA0BA,GAClCA,CACR,GAGWqC,EAAmBT,UAC9B,IACE,MAAM,KAAEC,SAAeL,EAAAA,EAAMM,IAAI,SAADQ,OAAU/C,GAAW,CACnDwC,OAAQ,CACNC,QAAST,EACTU,SAAU,WAGd,OAAOJ,CACT,CAAE,MAAO7B,GAEP,MADAC,QAAQD,MAAM,oCAAqCA,GAC7CA,CACR,GAGWuC,EAAcX,UACzB,IACE,MAAM,KAAEC,SAAeL,EAAAA,EAAMM,IAAI,SAADQ,OAAU/C,EAAO,YAAY,CAC3DwC,OAAQ,CACNC,QAAST,EACTU,SAAU,WAGd,OAAOJ,EAAKW,IACd,CAAE,MAAOxC,GAEP,MADAC,QAAQD,MAAM,uBAAwBA,GAChCA,CACR,GAGWJ,EAAegC,UAC1B,IACE,MAAM,KAAEC,SAAeL,EAAAA,EAAMM,IAAI,SAADQ,OAAU/C,EAAO,YAAY,CAC3DwC,OAAQ,CACNC,QAAST,EACTU,SAAU,WAGd,OAAOJ,EAAKK,OACd,CAAE,MAAOlC,GAEP,MADAC,QAAQD,MAAM,0BAA2BA,GACnCA,CACR,E","sources":["components/reviews/Reviews.jsx","helppers/Fetch.js"],"sourcesContent":["import { Loader } from 'components/loader/Loader';\nimport { fetchReviews } from 'helppers/Fetch';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const fetchMovieReviews = () => {\n      setLoading(true);\n      fetchReviews(movieId)\n        .then(review => {\n          setReviews(review);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <div style={{ padding: '15px', textAlign: 'justify' }}>\n      {loading && <Loader />}\n      {!loading && reviews.length === 0 && (\n        <p style={{ color: 'white', fontSize: '20px', fontWeight: '600' }}>\n          No reviews for this movie...\n        </p>\n      )}\n      <ul style={{ listStyleType: 'none' }}>\n        {reviews.map(({ id, author, content }) => (\n          <li key={id}>\n            <h4 style={{ marginBottom: '10px', marginTop: '20px' }}>\n              {author}\n            </h4>\n            <p style={{ color: 'white', fontSize: '20px', fontWeight: '600' }}>\n              {content}\n            </p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst KEY = 'dc46b2bf0e575d3fd6c04fa612170e69';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingList = async () => {\n  try {\n    const { data } = await axios.get('trending/movie/day', {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n      },\n    });\n\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching trends:', error);\n    throw error;\n  }\n};\n\nexport const fetchSearchMovies = async query => {\n  try {\n    const { data } = await axios.get('search/movie', {\n      params: {\n        api_key: KEY,\n        query,\n        language: 'en-US',\n      },\n    });\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching movies:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieInform = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n      },\n    });\n    return data;\n  } catch (error) {\n    console.error('Error fetching movie information:', error);\n    throw error;\n  }\n};\n\nexport const fetchActors = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n      },\n    });\n    return data.cast;\n  } catch (error) {\n    console.error('Error fetching cast:', error);\n    throw error;\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        api_key: KEY,\n        language: 'en-US',\n      },\n    });\n    return data.results;\n  } catch (error) {\n    console.error('Error fetching reviews:', error);\n    throw error;\n  }\n};\n"],"names":["Reviews","reviews","setReviews","useState","movieId","useParams","loading","setLoading","useEffect","fetchReviews","then","review","catch","error","console","log","finally","_jsxs","style","padding","textAlign","children","_jsx","Loader","length","color","fontSize","fontWeight","listStyleType","map","_ref","id","author","content","marginBottom","marginTop","KEY","axios","defaults","baseURL","fetchTrendingList","async","data","get","params","api_key","language","results","fetchSearchMovies","query","fetchMovieInform","concat","fetchActors","cast"],"sourceRoot":""}